%YAML 1.1
---
- join-point:
    function-body:
      function:
        - directive: 'dd:span'
        - receives: context.Context
  advice:
    prepend-statements:
      imports:
        event: github.com/datadog/orchestrion/instrument/event
        instrument: github.com/datadog/orchestrion/instrument
      template: |-
        {{- $ctx := .FindArgument "context.Context" -}}
        {{- $name := .Function.Name -}}
        {{$ctx}} = instrument.Report({{$ctx}}, event.EventStart{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
        {{- range .DirectiveArgs "dd:span" -}}
          , {{printf "%q" .Key}}, {{printf "%q" .Value}}
        {{- end -}})
        defer instrument.Report({{$ctx}}, event.EventEnd{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
        {{- range .DirectiveArgs "dd:span" -}}
          , {{printf "%q" .Key}}, {{printf "%q" .Value}}
        {{- end -}})

- join-point:
    function-body:
      function:
        - directive: 'dd:span'
        - receives: '*net/http.Request'
  advice:
    prepend-statements:
      imports:
        event: github.com/datadog/orchestrion/instrument/event
        instrument: github.com/datadog/orchestrion/instrument
      template: |-
        {{- $req := .FindArgument "*net/http.Request" -}}
        {{- $name := .Function.Name -}}
        {{$req}} = {{$req}}.WithContext(instrument.Report({{$req}}.Context(), event.EventStart{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
        {{- range .DirectiveArgs "dd:span" -}}
          , {{printf "%q" .Key}}, {{printf "%q" .Value}}
        {{- end -}}))
        defer instrument.Report({{$req}}.Context(), event.EventEnd{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
        {{- range .DirectiveArgs "dd:span" -}}
          , {{printf "%q" .Key}}, {{printf "%q" .Value}}
        {{- end -}})
