--- input.go
+++ output.go
@@ -1,13 +1,37 @@
+//line input.go:1:1
 package test
 
 import (
   "context"
+//line <generated>:1
+  __orchestrion_tracer "gopkg.in/DataDog/dd-trace-go.v1/ddtrace/tracer"
 )
 
 //dd:span foo:bar baz:qux
+//line input.go:8
 func outer(ctx context.Context) {
+//line <generated>:1
+  {
+    var span __orchestrion_tracer.Span
+    span, ctx = __orchestrion_tracer.StartSpanFromContext(ctx, "outer",
+      __orchestrion_tracer.Tag("function-name", "outer"),
+      __orchestrion_tracer.Tag("foo", "bar"),
+      __orchestrion_tracer.Tag("baz", "qux"),
+    )
+
+    defer span.Finish()
+  }
   //dd:span
+//line input.go:10
   inner := func(c context.Context) {
+//line <generated>:1
+    {
+      var span __orchestrion_tracer.Span
+      span, c = __orchestrion_tracer.StartSpanFromContext(c, "")
+
+      defer span.Finish()
+    }
+//line input.go:11
     panic("Not implemented")
   }
   inner(ctx)
