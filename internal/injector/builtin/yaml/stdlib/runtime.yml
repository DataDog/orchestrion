# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2023-present Datadog, Inc.
%YAML 1.1
---
# Provides access to the Goroutine Local Storage (GLS) for other aspects to use.
meta:
  name: runtime
  description: Operations that interact with Go's runtime system.
  icon: cog
  caveats: |-
    This configuration introduces a way to access the Goroutine Local Storage (GLS), which is not
    meant to be used directly by end-users. This is intended to be used only by tracer internals to
    enable trace context forwarding in places where a {{<godoc "context" "Context">}} value is not
    available.
aspects:
  - join-point:
      struct-definition: runtime.g
    advice:
      - add-struct-field:
          name: __dd_gls
          type: any
      - add-blank-import: unsafe # Needed for go:linkname
      - inject-declarations:
          template: |-
            //go:linkname __dd_orchestrion_gls_get __dd_orchestrion_gls_get
            func __dd_orchestrion_gls_get() any {
              return getg().m.curg.__dd_gls
            }

            //go:linkname __dd_orchestrion_gls_set __dd_orchestrion_gls_set
            func __dd_orchestrion_gls_set(val any) {
              getg().m.curg.__dd_gls = val
            }
