--- input.go
+++ output.go
@@ -1,11 +1,16 @@
+//line input.go:1:1
 package main
 
 import (
   "io"
   "log"
   "net/http"
+//line <generated>
+  __orchestrion_instrument "github.com/DataDog/orchestrion/instrument"
+  __orchestrion_event "github.com/DataDog/orchestrion/instrument/event"
 )
 
+//line input.go:9
 func main() {
   s := &http.Server{
     Addr:    ":8085",
@@ -15,6 +12,28 @@
 }
 
 func handle(w http.ResponseWriter, r *http.Request) {
+//line <generated>
+  {
+    r = r.WithContext(__orchestrion_instrument.Report(
+      r.Context(),
+      __orchestrion_event.EventStart,
+      "function-name", "handle",
+      "span.kind", "server",
+      "http.method", r.Method,
+      "http.url", r.URL,
+      "http.useragent", r.Header.Get("User-Agent"),
+    ))
+    defer __orchestrion_instrument.Report(
+      r.Context(),
+      __orchestrion_event.EventEnd,
+      "function-name", "handle",
+      "span.kind", "server",
+      "http.method", r.Method,
+      "http.url", r.URL,
+      "http.useragent", r.Header.Get("User-Agent"),
+    )
+  }
+//line input.go:18
   data, err := io.ReadAll(r.Body)
   if err != nil {
     w.WriteHeader(http.StatusBadRequest)
