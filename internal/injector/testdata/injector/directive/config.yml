%YAML 1.1
---
aspects:
  - join-point:
      function-body:
        all-of:
          - function:
              - receives: context.Context
          - directive: 'dd:span'
    advice:
      - prepend-statements:
          imports:
            event: github.com/datadog/orchestrion/instrument/event
            instrument: github.com/datadog/orchestrion/instrument
          template: |-
            {{- $ctx := .Function.ArgumentOfType "context.Context" -}}
            {{- $name := .Function.Name -}}
            instrument.Report({{$ctx}}, event.EventStart{{with $name}}, "name", {{printf "%q" .}}{{end}}
            {{- range .DirectiveArgs "dd:span" -}}
              , {{printf "%q" .Key}}, {{printf "%q" .Value}}
            {{- end -}})
            defer instrument.Report({{$ctx}}, event.EventEnd{{with $name}}, "name", {{printf "%q" .}}{{end}}
            {{- range .DirectiveArgs "dd:span" -}}
              , {{printf "%q" .Key}}, {{printf "%q" .Value}}
            {{- end -}})

syntheticReferences:
  github.com/datadog/orchestrion/instrument: true
  github.com/datadog/orchestrion/instrument/event: true

code: |-
  package test

  import (
    "context"
  )

  //dd:span foo:bar baz:qux
  func outer(ctx context.Context) {
    //dd:span
    inner := func(c context.Context) {
      panic("Not implemented")
    }
    inner(ctx)
  }
