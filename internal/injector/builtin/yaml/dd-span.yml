# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2023-present Datadog, Inc.
---
# yaml-language-server: $schema=../../../../docs/static/schema.json
meta:
  name: //dd:span
  description: Monitor a function using a custom span.
  icon: cog
aspects:
  - id: Using context.Context
    join-point:
      function-body:
        all-of:
          - directive: 'dd:span'
          - function:
              - receives: context.Context
    advice:
      - prepend-statements:
          imports:
            event: github.com/datadog/orchestrion/instrument/event
            instrument: github.com/datadog/orchestrion/instrument
          template: |-
            {{- $ctx := .FindArgument "context.Context" -}}
            {{- $name := .Function.Name -}}
            {{$ctx}} = instrument.Report({{$ctx}}, event.EventStart{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
            {{- range .DirectiveArgs "dd:span" -}}
              , {{printf "%q" .Key}}, {{printf "%q" .Value}}
            {{- end -}})
            defer instrument.Report({{$ctx}}, event.EventEnd{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
            {{- range .DirectiveArgs "dd:span" -}}
              , {{printf "%q" .Key}}, {{printf "%q" .Value}}
            {{- end -}})

  - id: Using *http.Request
    join-point:
      function-body:
        all-of:
          - directive: 'dd:span'
          - function:
              - receives: '*net/http.Request'
    advice:
      - prepend-statements:
          imports:
            event: github.com/datadog/orchestrion/instrument/event
            instrument: github.com/datadog/orchestrion/instrument
          template: |-
            {{- $req := .FindArgument "*net/http.Request" -}}
            {{- $name := .Function.Name -}}
            {{$req}} = {{$req}}.WithContext(instrument.Report({{$req}}.Context(), event.EventStart{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
            {{- range .DirectiveArgs "dd:span" -}}
              , {{printf "%q" .Key}}, {{printf "%q" .Value}}
            {{- end -}}))
            defer instrument.Report({{$req}}.Context(), event.EventEnd{{with $name}}, "function-name", {{printf "%q" .}}{{end}}
            {{- range .DirectiveArgs "dd:span" -}}
              , {{printf "%q" .Key}}, {{printf "%q" .Value}}
            {{- end -}})
