%YAML 1.1
---
aspects:
  - join-point:
      all-of:
        - not:
            import-path: net/http
        - one-of:
            - function-call: net/http.Get
            - function-call: net/http.Head
            - function-call: net/http.Post
            - function-call: net/http.PostForm
    advice:
      - wrap-expression:
          imports:
            # Add a synthetic import here with the same alias as the receiver in the method Get
            # below, where the aspect will apply and trigger the bug.
            # See: https://github.com/DataDog/orchestrion/issues/674
            client: github.com/DataDog/dd-trace-go/contrib/net/http/v2/client
          template: |-
            {{- $ctx := .Function.ArgumentOfType "context.Context" -}}
            {{- $req := .Function.ArgumentOfType "*net/http.Request" }}
            {{- if $ctx -}}
              client.{{ .AST.Fun.Name }}(
                {{ $ctx }},
                {{ range .AST.Args }}{{ . }},
                {{ end }}
              )
            {{- else if $req -}}
              client.{{ .AST.Fun.Name }}(
                {{ $req }}.Context(),
                {{ range .AST.Args }}{{ . }},
                {{ end }}
              )
            {{- else -}}
              {{ . }}
            {{- end -}}

import-path: github.com/ACME/Example.Package

code: |-
  package example

  import (
      "net/http"
  )

  type httpClient struct {
      serverHost string
  }

  func (client *httpClient) Get(path string) (*http.Response, error) {
      return http.Get("http://" + client.serverHost + path)
  }
