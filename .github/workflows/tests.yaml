name: Tests
on:
  pull_request:
    branches: ["**"]
  merge_group:
    branches: ["main"]
  push:
    branches: ["main"]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'DataDog/orchestrion'
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: "**/*.sum"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.52.2
          skip-cache: true # actions/setup-go has already done this
      - name: Verify license headers
        run: go run tools/headercheck/header_check.go
      - name: vet
        run: go vet ./...
      - name: Verify LICENSE-3rdparty.csv
        run: ./tools/verify-licenses.sh
        env:
          TMPDIR: ${{ runner.temp }}
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'DataDog/orchestrion'
      - name: Checkout Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: "**/*.sum"
      - name: Run unit tests
        run: go test -cover -covermode=atomic -race ./...
  integration-tests:
    runs-on: ubuntu-latest
    services:
      testagent:
        image: ghcr.io/datadog/dd-apm-test-agent/ddapm-test-agent:v1.11.0
        ports:
          - 8126:8126
        env:
          # See documentation for configuration:
          # https://github.com/DataDog/dd-apm-test-agent#environment-variables
          ENABLED_CHECKS: trace_stall,trace_count_header,trace_peer_service,trace_dd_service
          LOG_LEVEL: DEBUG
          TRACE_LANGUAGE: golang
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'DataDog/orchestrion'
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: "**/*.sum"
      - name: Run Integration Tests
        run: ./integration-tests.sh
        env:
          TMPDIR: ${{ runner.temp }}
      # Docker will leave stuff owned by root and the upload-artifact action
      # will fail to scan the directories unless we do this...
      - name: Fix output files ownership
        run: sudo chown -R $USER _integration-tests/outputs
      - name: Upload artifact
        # We want this even if the tests failed
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-output
          path: _integration-tests/outputs
          if-no-files-found: error # That would be very unexpected

  # This is just a join point intended to simplify branch protection settings
  complete:
    runs-on: ubuntu-latest
    needs:
      - lint
      - unit-tests
      - integration-tests
    steps:
      - name: Done
        run: echo "OK"
