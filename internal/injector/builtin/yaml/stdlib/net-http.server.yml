# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2023-present Datadog, Inc.
---
# yaml-language-server: $schema=../../../../../docs/static/schema.json
meta:
  name: net/http.Server
  description: HTTP server implementation.
  icon: at-symbol
aspects:
  - id: Wrap http.Server.Handler
    join-point:
      all-of:
        - struct-literal:
            type: net/http.Server
            field: Handler
        # No instrumenting github.com/go-chi/chi/v5 as this causes a circular dependency.
        - not:
            one-of:
              - import-path: github.com/go-chi/chi/v5
              - import-path: github.com/go-chi/chi/v5/middleware
              - import-path: golang.org/x/net/http2
    advice:
      - wrap-expression:
          imports:
            instrument: github.com/DataDog/orchestrion/instrument
          template: |-
            //dd:startwrap
            instrument.MaybeWrapHandler({{.}})
            //dd:endwrap
  - id: "Wrap starting a server - part 1 - TODO: this description sucks"
    join-point:
      one-of:
        - function-call: net/http.ListenAndServe
        - function-call: net/http.Serve
    advice:
      - wrap-expression:
          imports:
            instrument: "github.com/DataDog/orchestrion/instrument"
          template: |-
            {{.AST.Fun}}(
              {{ index .AST.Args 0}},
              instrument.MaybeWrapHandler({{ index .AST.Args 1 }}),
            )
  - id: "Wrap starting a server - part 2 - TODO: this description sucks"
    join-point:
      one-of:
        - function-call: net/http.ListenAndServeTLS
        - function-call: net/http.ServeTLS
    advice:
      - wrap-expression:
          imports:
            instrument: "github.com/DataDog/orchestrion/instrument"
          template: |-
            {{.AST.Fun}}(
              {{ index .AST.Args 0}},
              {{ index .AST.Args 1}},
              {{ index .AST.Args 2}},
              instrument.MaybeWrapHandler({{ index .AST.Args 3 }}),
            )
