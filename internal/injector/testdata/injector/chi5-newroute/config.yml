%YAML 1.1
---
aspects:
  - join-point:
      function-call: github.com/go-chi/chi/v5.NewRouter
    advice:
      - wrap-expression:
          imports:
            chi: github.com/go-chi/chi/v5
            chitrace: gopkg.in/DataDog/dd-trace-go.v1/contrib/go-chi/chi.v5
          template: |-
            func() *chi.Mux {
              mux := {{ . }}
              mux.Use(chitrace.Middleware())
              return mux
            }()

syntheticReferences:
  gopkg.in/DataDog/dd-trace-go.v1/contrib/go-chi/chi.v5: true

code: |-
  package main

  import (
    "log"
    "net/http"

    "github.com/go-chi/chi/v5"
  )

  func main() {
    router := chi.NewRouter()
    router.Get("/", func(w http.ResponseWriter, _ *http.Request) {
      w.Write([]byte("Hello World!"))
    })
    s := &http.Server{
      Addr:    ":8080",
      Handler: router,
    }
    log.Print(s.ListenAndServe())
  }
