// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2023-present Datadog, Inc.

package main

import (
	"context"
	"fmt"
	"io"
	"net/http"
	"os"
	"strings"
	"time"
//line <generated>:1
	"gopkg.in/DataDog/dd-trace-go.v1/ddtrace/tracer"
)

//line samples/client/main.go:18
func main() {
//line <generated>:1
	//dd:startinstrument
	{
		tracer.Start(tracer.WithOrchestrion(map[string]string{"version": "<version.Tag>"}))
		defer tracer.Stop()
	}
	//dd:endinstrument
//line samples/client/main.go:19
	if len(os.Args) < 2 {
		return
	}
	client := &http.Client{
		Timeout: time.Second,
	}
	req, err := http.NewRequestWithContext(context.Background(),
		http.MethodPost, "http://localhost:8080",
		strings.NewReader(os.Args[1]))
	if err != nil {
		panic(err)
	}
	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	fmt.Println(resp.Status)
	if resp.Body == nil {
		return
	}
	defer resp.Body.Close()
	b, err := io.ReadAll(resp.Body)
	if err != nil {
		panic(err)
	}
	fmt.Println(string(b))
}
