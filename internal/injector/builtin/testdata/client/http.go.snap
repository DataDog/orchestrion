//line samples/client/http.go:1:1
// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2023-present Datadog, Inc.

package main

import (
	"context"
	"log"
	"net/http"
	"net/url"
	"strings"
//line <generated>
	__orchestrion_instrument "github.com/datadog/orchestrion/instrument/net/http"
)

//line samples/client/http.go:16
func shortHandsWithContext(_arg_0 context.Context) {
	resp, err :=
//line <generated>
		__orchestrion_instrument.Get(
			_arg_0,
//line samples/client/http.go:17
			"http://localhost:8080")
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()

	resp, err =
//line <generated>
		__orchestrion_instrument.Head(
			_arg_0,
//line samples/client/http.go:23
			"http://localhost:8080")
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()

	resp, err =
//line <generated>
		__orchestrion_instrument.Post(
			_arg_0,
//line samples/client/http.go:29
			"http://localhost:8080", "text/plain", strings.NewReader("Body"))
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()

	resp, err =
//line <generated>
		__orchestrion_instrument.PostForm(
			_arg_0,
//line samples/client/http.go:35
			"http://localhost:8080", url.Values{"key": {"value"}})
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()
}

func shortHandsWithRequest(_arg_0 *http.Request /* for context */) {
	resp, err :=
//line <generated>
		__orchestrion_instrument.Get(
			_arg_0.Context(),
//line samples/client/http.go:43
			"http://localhost:8080")
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()

	resp, err =
//line <generated>
		__orchestrion_instrument.Head(
			_arg_0.Context(),
//line samples/client/http.go:49
			"http://localhost:8080")
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()

	resp, err =
//line <generated>
		__orchestrion_instrument.Post(
			_arg_0.Context(),
//line samples/client/http.go:55
			"http://localhost:8080", "text/plain", strings.NewReader("Body"))
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()

	resp, err =
//line <generated>
		__orchestrion_instrument.PostForm(
			_arg_0.Context(),
//line samples/client/http.go:61
			"http://localhost:8080", url.Values{"key": {"value"}})
	if err != nil {
		log.Fatal(err)
	}
	resp.Body.Close()
}
